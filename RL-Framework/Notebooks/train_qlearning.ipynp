from rl_framework.envs.gridworld import GridWorld
from rl_framework.agents.q_learning import QLearningAgent
from rl_framework.utils.plotting import plot_policy, plot_q_values_heatmap

env = GridWorld(height=10, width=10, goal=[(5,5),(9,5)],
                obstacles=[(3,3),(3,2),(3,5),(4,1),(3,4)],
                reward_goal=10, reward_step=-1, obstacle_penalty=-10)

agent = QLearningAgent(env)
agent.learn(num_episodes=2000, max_steps=20, random_start=True)

# Test learned policy
env.reset()
agent.epsilon = 0
done, steps = False, 0
while not done and steps < 50:
    env.render()
    action = agent.act(env.agent.pos)
    _, _, done = env.step(action)
    steps += 1

plot_policy(env, agent.Q)
plot_q_values_heatmap(env, agent.Q)
